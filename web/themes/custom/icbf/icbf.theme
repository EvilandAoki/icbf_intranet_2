<?php

use Drupal\Core\Pager\PagerManagerInterface;
use Drupal\Core\Pager\PagerParameters;

/**
 * @file
 * icbf theme file.
 */

 /**
 * Implements hook_preprocess_page().
 */
function icbf_preprocess_page(array &$variables) {
  // Fixed vs fluid.
  $fluid = \Drupal::config('icbf.settings')->get('fluid_breakpoint');
  $variables['container_class'] = $fluid ? 'container-fluid' : 'container';

  // Columna de contenido según sidebars.
  $has_first  = !empty($variables['page']['sidebar_first']);
  $has_second = !empty($variables['page']['sidebar_second']);

  if ($has_first && $has_second) {
    $variables['content_column_class'] = 'col-lg-6';
  }
  elseif ($has_first || $has_second) {
    $variables['content_column_class'] = 'col-lg-9';
  }
  else {
    $variables['content_column_class'] = 'col-lg-12';
  }
}

/**
 * Implements hook_theme_registry_alter().
 */
function icbf_theme_registry_alter(array &$theme_registry) {
  $theme_path = \Drupal::service('extension.list.theme')->getPath('icbf');

  foreach ($theme_registry as $key => &$info) {
    if (str_starts_with($key, 'page__node__')) {
      // Redirige estos templates a la carpeta 'layout'
      $template_file = $theme_path . '/layout/' . str_replace('__', '--', $key) . '.html.twig';
      if (file_exists($template_file)) {
        $info['path'] = $theme_path . '/layout';
      }
    }
  }
}



/**
 * Implementa hook_theme_suggestions_page_alter().
 */
function icbf_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  $route_match = \Drupal::routeMatch();

  if ($node = $route_match->getParameter('node')) {
    if ($node instanceof NodeInterface) {
      $bundle = $node->bundle();
      \Drupal::logger('theme_suggestions')->debug('Bundle: ' . $bundle);
      $suggestions[] = 'page__node__' . $bundle;
    }
  }
}



/**
 * Implements hook_preprocess_HOOK() para webform-submission-list.html.twig.
 */
function mi_tema_preprocess_webform_submission_list(array &$variables) {
  if ($variables['element']['#webform_id'] !== 'webform_53894') {
    return;
  }

  $all_items = $variables['items'];
  $total = count($all_items);
  $per_page = 10;

  // Creamos el pager con el total y el per-page.
  /** @var PagerManagerInterface $pager_manager */
  $pager_manager = \Drupal::service('pager.manager');
  $pager_manager->createPager($total, $per_page);

  $current_page = \Drupal::service('pager.parameters')->findPage();
  $offset = $current_page * $per_page;

  $variables['items'] = array_slice($all_items, $offset, $per_page);

  // Añadimos la render array del pager para Twig.
  $variables['pager'] = [
    '#type' => 'pager',
  ];
}

/**
 * Implements hook_preprocess_HOOK().
 */
function icbf_preprocess_field(&$variables) {
  $field_to_check = [
    'field_content',
    'field_video_02',
    'field_builder',
    'field_constructor_glazedb',
    'field_infografia_dit',
    'field_header_area'
  ];
  if (in_array($variables['field_name'], $field_to_check)) {
    $items = &$variables['items'];
    foreach ($items as &$item) {
      if (is_null($item['content']['#format'])) {
        $item['content']['#format'] = 'full_html';
      }
    }
  }
  if ($variables['field_name'] == 'field_constructor_glazedb' && isset($item['content']['#text'])) {
    $html = $item['content']['#text'];
    $item['content']['#text'] = icbf_files_directory_process($html);
  }
  if ($variables['field_name'] == 'field_infografia_dit' && isset($item['content']['#text'])) {
    $html = $item['content']['#text'];
    $item['content']['#text'] = icbf_files_directory_process($html);
  }
  if ($variables['field_name'] == 'field_content' && isset($item['content']['#text'])) {
    $html = $item['content']['#text'];
    $item['content']['#text'] = icbf_files_directory_process($html);
  }
  if ($variables['field_name'] == 'field_header_area' && isset($item['content']['#text'])) {
    $html = $item['content']['#text'];
    $item['content']['#text'] = icbf_files_directory_process($html);
  }
  if ($variables['field_name'] == 'field_builder' && isset($item['content']['#text'])) {
    $html = $item['content']['#text'];
    $item['content']['#text'] = icbf_files_directory_process($html);
  }
}

function icbf_preprocess_node(array &$variables) {
  if (\Drupal::currentUser()->isAnonymous()) {
    $variables['display_submitted'] = FALSE;
  }
}

/**
 * Processes the HTML content to replace placeholders with actual values.
 *
 * @param string $html
 *   The HTML content to process.
 *
 * @return string
 *   The processed HTML content with placeholders replaced.
 */
function icbf_files_directory_process($html)
{
  $request = \Drupal::service('request_stack')->getCurrentRequest();
  $base_url = $request->getSchemeAndHttpHost();
  $public_files_path = \Drupal::config('system.file')->get('path.public') ?? 'sites/default/files';
  $html = str_replace('-base-url-', $base_url, $html);
  $html = str_replace('-files-directory-', $public_files_path, $html);
  return $html;
}